{"version":3,"sources":["AdresseList.js","DawaSearcher.js","ErrorComp.js","SuccessAlert.js","context/FormContext.js","components/TextInput.js","components/ImageUpload.js","components/DateInput.js","components/SelectInput.js","components/SubmitButton.js","Formular.js","service.js","App.js","reportWebVitals.js","index.js"],"names":["AdresseList","searchTerm","handleChoice","setTekst","komkode","useState","adresses","setAdresses","setDoSearch","useEffect","length","url","console","log","fetch","then","res","json","data","comps","map","item","index","ListItem","key","tekst","value","button","onClick","e","handleClick","ListItemText","primary","List","component","style","maxHeight","overflow","DawaSearcher","size","setAdressData","adresseTekst","setAdresseTekst","showAutocompleteList","setShowAutocompleteList","adgangsadresse","x","y","setItem","Grid","xs","TextField","id","InputLabelProps","shrink","label","Typography","variant","fullWidth","onChange","target","InputProps","endAdornment","InputAdornment","position","IconButton","Clear","useStyles","makeStyles","theme","root","width","marginTop","spacing","AlertComp","props","classes","errors","closeAlert","list","err","className","Alert","severity","onClose","SuccessAlert","overnat_adresse","overnat_navn","overnat_lokaler","overnat_over_50","overnat_tegning_filnavn","overnat_antal","overnat_start_dato","Date","overnat_slut_dato","overnat_start_tid","overnat_slut_tid","overnat_kommune","overnat_kontaktpers","overnat_kontakttlf","ansvarl_kontaktpers","ansvarl_kontaktlf","ansvarl_kontaktmail","ansoegn_indsendt","the_geom","overnat_tegning","FormularContext","React","createContext","FormularProvider","state","setState","setValue","prevState","Provider","keyValues","Object","keys","forEach","k","children","TextInput","title","type","evtHandler","useContext","handleChange","ImageUpload","str","setImageSrc","fileRef","useRef","setValues","reader","FileReader","handleReaderLoaded","result","replace","color","htmlFor","display","name","accept","files","file","onload","readAsDataURL","ref","aria-label","current","click","Chip","substring","onDelete","DateInput","format","margin","date","startDate","slutDato","endDate","KeyboardButtonProps","cancelLabel","TimeInput","ampm","time","DateTimeInputs","kommuner","nummer","SelectInput","setKomkode","select","split","nr","option","MenuItem","SubmitButton","Button","flexGrow","paper","padding","textAlign","palette","text","secondary","formatedTimestamp","d","toISOString","toTimeString","Formular","resetForm","gid","schema","yup","shape","min","required","positive","integer","matches","email","formErrors","setFormErrors","successMessage","setSuccessMessage","utils","DateFnsUtils","locale","daLocale","Container","maxWidth","gutterBottom","container","adress","Checkbox","checked","formData","validate","abortEarly","valid","query","payload","q","srs","axios","post","postData","columns","join","values","buildQuery","window","scrollTo","top","behavior","catch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f18dbbae.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nexport default function AdresseList({\n  searchTerm,\n  setTekst,\n  handleChoice,\n  komkode,\n}) {\n  const [adresses, setAdresses] = useState([]);\n  const [doSearch, setDoSearch] = useState(true);\n  const handleClick = (item) => {\n    // console.log(tekst);\n    //setTekst(tekst);\n    handleChoice(item);\n    setDoSearch(false);\n  };\n\n  useEffect(() => {\n    if (searchTerm.length < 3) return;\n    const url = `https://dawa.aws.dk/adgangsadresser/autocomplete?q=${searchTerm}&type=adgangsadresse&side=1&per_side=105&noformat=1&kommunekode=${komkode}&srid=25832`;\n    console.log(url);\n    fetch(url).then((res) => {\n      res.json().then((data) => {\n        setAdresses(data);\n      });\n    });\n  }, [searchTerm]);\n\n  let comps = adresses.map((item, index) => (\n    <ListItem\n      key={`${index}-${item.tekst}`}\n      value={item.tekst}\n      button\n      onClick={(e) => handleClick(item)}\n    >\n      <ListItemText primary={item.tekst} />\n    </ListItem>\n  ));\n\n  return (\n    <List component='nav' style={{ maxHeight: 400, overflow: \"auto\" }}>\n      {comps}\n    </List>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AdresseList from \"./AdresseList\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Clear, Delete } from \"@material-ui/icons\";\n\nexport default function DawaSearcher({\n  size,\n  setAdressData,\n  komkode,\n  adresseTekst,\n  setAdresseTekst,\n}) {\n  const [data, setData] = useState([]);\n  const [showAutocompleteList, setShowAutocompleteList] = useState(true);\n  const [tekst, setTekst] = useState(\"\");\n  const [_item, setItem] = useState({\n    tekst: \"\",\n    adgangsadresse: { x: \"\", y: \"\" },\n  });\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  /*\n     Called when inputing in the search box / adresse field\n\n     - setShowList : \n    */\n  const handleChange = (e) => {\n    setShowAutocompleteList(true);\n    setAdresseTekst(e.target.value);\n  };\n\n  const handleChoice = (item) => {\n    setShowAutocompleteList(false);\n    setItem(item);\n    setAdresseTekst(item.tekst);\n    setAdressData(item); // pass text and location to the parent component\n  };\n\n  return (\n    <Grid item xs={size}>\n      <TextField\n        id='standard-basic'\n        InputLabelProps={{ shrink: true }}\n        label={\n          <Typography variant='h6' component='h3'>\n            Overnatningstedets adresse\n          </Typography>\n        }\n        fullWidth\n        value={adresseTekst}\n        onChange={handleChange}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position='end'>\n              <IconButton\n                onClick={(e) => {\n                  setAdresseTekst(\"\");\n                  setAdressData(\"\");\n                  setShowAutocompleteList(false);\n                }}\n              >\n                <Clear />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      {showAutocompleteList && (\n        <AdresseList\n          searchTerm={adresseTekst}\n          setTekst={setAdresseTekst}\n          handleChoice={handleChoice}\n          komkode={komkode}\n        />\n      )}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';  \nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\n\nexport default function AlertComp(props){\n    const classes = useStyles();\n    const {errors, closeAlert} = props;\n    const list = <ul>\n        {\n            errors.map((err, index) => <li key={index}>{err}</li>)\n        }\n    </ul>;\n    return (\n        <div className={classes.root}>\n            <Alert severity=\"error\" onClose={() => closeAlert([])}>{list}</Alert>\n        </div>\n    );\n}","import React from \"react\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function SuccessAlert(props) {\n  const classes = useStyles();\n  const { closeAlert } = props;\n\n  return (\n    <div className={classes.root}>\n      <Alert severity='success' onClose={() => closeAlert(false)}>\n        Formular er sendt\n      </Alert>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nlet data = {\n  overnat_adresse: \"\",\n  overnat_navn: \"\",\n  overnat_lokaler: \"\",\n  overnat_over_50: false,\n  overnat_tegning_filnavn: \"\",\n  overnat_antal: \"\",\n  overnat_start_dato: new Date(),\n  overnat_slut_dato: new Date(),\n  overnat_start_tid: new Date(),\n  overnat_slut_tid: new Date(),\n  overnat_kommune: \"\",\n  overnat_kontaktpers: \"\",\n  overnat_kontakttlf: \"\",\n  ansvarl_kontaktpers: \"\",\n  ansvarl_kontaktlf: \"\",\n  ansvarl_kontaktmail: \"\",\n  ansoegn_indsendt: \"\",\n  // gid: \"\",\n  the_geom: \"\",\n  overnat_tegning: \"\",\n  // file: \"\",\n  //imageSrc: \"\",\n};\n\nconst FormularContext = React.createContext([{}, () => {}, () => {}, () => {}]);\n\nconst FormularProvider = (props) => {\n  const [state, setState] = useState(data);\n  const [imageSrc, setImageSrc] = useState(\"\");\n  const setValue = (key, value) => {\n    setState((prevState) => ({\n      ...prevState,\n      [key]: value,\n    }));\n  };\n\n  const resetForm = () => setState(data);\n\n  const setValues = (keyValues) => {\n    Object.keys(keyValues).forEach((k) => {\n      setValue(k, keyValues[k]);\n    });\n  };\n\n  return (\n    <FormularContext.Provider value={[state, setValue, setValues, resetForm]}>\n      {props.children}\n    </FormularContext.Provider>\n  );\n};\n\nexport { FormularContext, FormularProvider };\n","import React, { useContext } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FormularContext } from \"../context/FormContext\";\n\nexport default function TextInput(props) {\n  const { size, id, title, type, evtHandler } = props;\n  const [state, setValue, setValues] = useContext(FormularContext);\n  const handleChange = (e, id) => {\n    setValue(id, e.target.value);\n  };\n\n  return (\n    <Grid item xs={size}>\n      <TextField\n        id={id}\n        type={type || \"text\"}\n        value={state[id]}\n        InputLabelProps={{ shrink: true }}\n        label={\n          <Typography variant='h6' component='h3'>\n            {title}\n          </Typography>\n        }\n        onChange={(e) => handleChange(e, id)}\n        fullWidth\n      />\n    </Grid>\n  );\n}\n","import React, { useContext, useRef } from \"react\";\nimport { Grid, Chip, Typography, IconButton } from \"@material-ui/core\";\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport { FormularContext } from \"../context/FormContext\";\n\nconst _substr = (str) => {\n  if (str.length > 25) {\n    return \"...\" + str.substring(str.length - 22);\n  }\n  return str;\n};\n\nexport default function ImageUpload({ setImageSrc }) {\n  const fileRef = React.useRef(null);\n  const [state, setValue, setValues] = useContext(FormularContext);\n  const { overnat_tegning_filnavn } = state;\n  const deleteImage = () => {\n    setValues({\n      // imageSrc: \"\",\n      overnat_tegning_filnavn: \"\",\n    });\n    fileRef.current.value = \"\";\n    setImageSrc(\"\");\n  };\n\n  const reader = new FileReader();\n  const handleImageUpload = (e) => {\n    console.log(\"file upload: \", e.target.files[0].name);\n    let file = e.target.files[0];\n    let name = e.target.files[0].name;\n    // fileName = name;\n\n    setValue(\"overnat_tegning_filnavn\", e.target.files[0].name);\n\n    if (file) {\n      reader.onload = handleReaderLoaded;\n      // reader.readAsBinaryString(file);\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleReaderLoaded = (e) => {\n    let binaryString = e.target.result;\n    console.log(\"before setImageSrc\");\n    setImageSrc(reader.result);\n    setValue(\"overnat_tegning\", reader.result.replace(/^data:.+;base64,/, \"\"));\n    // setData({\n    //   ...data,\n    //   overnat_tegning : btoa(binaryString)\n    // });\n  };\n\n  return (\n    <>\n      <Grid item xs={5}>\n        <Typography\n          style={{ color: \"rgba(0, 0, 0, 0.54)\" }}\n          variant='subtitle1'\n          component='h3'\n        >\n          Vedhæft tegningsmateriale{\" \"}\n        </Typography>\n      </Grid>\n      <Grid item xs={2}>\n        <label htmlFor='upload-photo'>\n          <input\n            style={{ display: \"none\" }}\n            id='upload-photo'\n            name='upload-photo'\n            type='file'\n            accept='.jpeg,.jpg,.png'\n            onChange={handleImageUpload}\n            ref={fileRef}\n          />\n\n          <IconButton\n            color='primary'\n            aria-label='upload fil'\n            onClick={(e) => fileRef.current && fileRef.current.click()}\n          >\n            <PhotoCameraIcon />\n          </IconButton>\n        </label>\n      </Grid>\n      <Grid item xs={5}>\n        {overnat_tegning_filnavn && (\n          <Chip\n            variant='outlined'\n            label={_substr(overnat_tegning_filnavn)}\n            size='medium'\n            color='secondary'\n            onDelete={(x) => deleteImage()}\n          />\n        )}\n      </Grid>\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Grid } from \"@material-ui/core\";\nimport { FormularContext } from \"../context/FormContext\";\n\nfunction DateInput({ size, id, title, label }) {\n  const [state, setValue, setValues] = useContext(FormularContext);\n  const handleDateChange = (date) => {\n    if (date < new Date()) return;\n\n    switch (id) {\n      case \"overnat_start_dato\":\n        let startDate = new Date(date);\n        let slutDato = new Date(state.overnat_slut_dato);\n        let endDate = slutDato < startDate ? startDate : slutDato;\n        setValues({\n          overnat_start_dato: startDate,\n          overnat_slut_dato: endDate,\n          overnat_start_tid: startDate,\n          overnat_slut_tid: endDate,\n        });\n        break;\n      case \"overnat_slut_dato\":\n        if (new Date(date) < new Date(state.overnat_start_dato)) return;\n        setValue(\"overnat_slut_dato\", new Date(date));\n        setValue(\"overnat_slut_tid\", new Date(date));\n        break;\n      default:\n        return;\n    }\n  };\n  return (\n    <Grid item xs={size}>\n      <KeyboardDatePicker\n        format='yyyy-MM-dd'\n        margin='normal'\n        id={id}\n        label={\n          <Typography variant='h6' component='h3'>\n            {title}\n          </Typography>\n        }\n        value={state[id]}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": { label },\n        }}\n        cancelLabel='Annulere'\n      />\n    </Grid>\n  );\n}\n\nfunction TimeInput({ size, id, title, label }) {\n  const [state, setValue, setValues] = useContext(FormularContext);\n  const handleTimeChange = (time) => {\n    setValue(id, new Date(time));\n  };\n\n  return (\n    <Grid item xs={size}>\n      <KeyboardTimePicker\n        margin='normal'\n        id={id}\n        label={\n          <Typography variant='h6' component='h3'>\n            {title}\n          </Typography>\n        }\n        ampm={false}\n        value={state[id]}\n        onChange={handleTimeChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"ændre tidspunkt\",\n        }}\n      />\n    </Grid>\n  );\n}\n\nexport default function DateTimeInputs() {\n  return (\n    <>\n      <DateInput id='overnat_start_dato' title='Start dato' size={6} />\n      <TimeInput id='overnat_start_tid' title='Start tidspunkt' size={6} />\n      <DateInput id='overnat_slut_dato' title='Slut dato' size={6} />\n      <TimeInput id='overnat_slut_tid' title='Slut tidspunkt' size={6} />\n    </>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { Grid, TextField, Typography, MenuItem } from \"@material-ui/core\";\nimport { FormularContext } from \"../context/FormContext\";\n\nconst kommuner = [\n  {\n    value: \"Aarhus\",\n    nummer: 751,\n  },\n  {\n    value: \"Favrskov\",\n    nummer: 710,\n  },\n  {\n    value: \"Noordjurs\",\n    nummer: 707,\n  },\n  {\n    value: \"Odder\",\n    nummer: 727,\n  },\n  {\n    value: \"Samsø\",\n    nummer: 741,\n  },\n  {\n    value: \"Skanderborg\",\n    nummer: 746,\n  },\n  {\n    value: \"Syddjurs\",\n    nummer: 706,\n  },\n  {\n    value: \"Randers\",\n    nummer: 730,\n  },\n];\n\nexport default function SelectInput({\n  size,\n  id,\n  title,\n  setKomkode,\n  setAdresseTekst,\n}) {\n  const [state, setValue, setValues] = useContext(FormularContext);\n  const handleSelect = (e) => {\n    const [nr, val] = e.target.value.split(\"_\");\n    setValues({\n      overnat_kommune: e.target.value,\n      overnat_adresse: \"\",\n      the_geom: \"\",\n    });\n    setKomkode(nr);\n    setAdresseTekst(\"\");\n  };\n\n  return (\n    <Grid item xs={size}>\n      <TextField\n        id={id}\n        select\n        value={state.overnat_kommune}\n        InputLabelProps={{ shrink: true }}\n        label={\n          <Typography variant='h6' component='h3'>\n            {title}\n          </Typography>\n        }\n        onChange={handleSelect}\n        fullWidth\n      >\n        {kommuner.map((option) => (\n          <MenuItem\n            key={option.nummer}\n            value={`${option.nummer}_${option.value}`}\n          >\n            {option.value}\n          </MenuItem>\n        ))}\n      </TextField>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { Grid, Button } from \"@material-ui/core\";\n\nexport default function SubmitButton({ onClick }) {\n  return (\n    <>\n      <Grid item xs={4}></Grid>\n      <Grid item xs={4}>\n        <Button variant='contained' color='primary' onClick={onClick}>\n          Send\n        </Button>\n      </Grid>\n      <Grid item xs={4}></Grid>\n    </>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport { Checkbox, Typography } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport daLocale from \"date-fns/locale/da\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport * as yup from \"yup\";\nimport DawaSearcher from \"./DawaSearcher\";\nimport ErrorComp from \"./ErrorComp\";\nimport SuccessAlert from \"./SuccessAlert\";\nimport TextInput from \"./components/TextInput\";\nimport { FormularContext } from \"./context/FormContext\";\nimport ImageUpload from \"./components/ImageUpload\";\nimport DateTimeInputs from \"./components/DateInput\";\nimport SelectInput from \"./components/SelectInput\";\nimport SubmitButton from \"./components/SubmitButton\";\nimport { postData } from \"./service\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    margin: 25,\n  },\n}));\n\nconst buildQuery = (data) => {\n  const keys = Object.keys(data);\n  const columns = keys.join(\",\");\n  const values = keys\n    .map((key) => {\n      if (\n        key === \"overnat_start_dato\" ||\n        key === \"overnat_slut_dato\" ||\n        key === \"overnat_start_tid\" ||\n        key === \"ansoegn_indsendt\" ||\n        key === \"overnat_slut_tid\"\n      ) {\n        return `'${formatedTimestamp(data[key])}'`;\n      }\n      if (key === \"the_geom\") return `${data[key]}`;\n\n      return `'${data[key]}'`;\n    })\n    .join(\",\");\n  return `INSERT INTO faelles.midlertidig_overnatning(${columns}) VALUES(${values})`;\n};\n\nconst formatedTimestamp = (d) => {\n  const date = new Date(d).toISOString().split(\"T\")[0];\n  const time = new Date(d).toTimeString().split(\" \")[0];\n  return `${date} ${time}`;\n};\n\nfunction Formular() {\n  const [state, setValue, setValues, resetForm] = useContext(FormularContext);\n  const fileRef = React.useRef(null);\n  const classes = useStyles();\n  const [data, setData] = useState({\n    overnat_adresse: \"\",\n    overnat_navn: \"\",\n    overnat_lokaler: \"\",\n    overnat_over_50: false,\n    overnat_tegning: \"\",\n    overnat_tegning_filnavn: \"\",\n    overnat_antal: \"\",\n    overnat_start_dato: new Date().toISOString(),\n    overnat_slut_dato: new Date().toISOString(),\n    overnat_start_tid: new Date().toISOString(),\n    overnat_slut_tid: new Date().toISOString(),\n    overnat_kommune: \"\",\n    overnat_kontaktpers: \"\",\n    overnat_kontakttlf: \"\",\n    ansvarl_kontaktpers: \"\",\n    ansvarl_kontaktlf: \"\",\n    ansvarl_kontaktmail: \"\",\n    ansoegn_indsendt: \"\",\n    gid: \"\",\n    the_geom: \"\",\n    file: \"\",\n  });\n\n  let schema = yup.object().shape({\n    overnat_adresse: yup.string().min(1),\n    overnat_navn: yup.string().required(),\n    overnat_lokaler: yup.string().required(),\n    overnat_over_50: yup.string().required(),\n    // overnat_tegning : yup.string().required(),\n    // overnat_tegning_filnavn : yup.string().required(),\n    overnat_antal: yup.number().positive().integer(),\n    overnat_start_dato: yup.string().required(),\n    overnat_slut_dato: yup.string().required(),\n    overnat_start_tid: yup.string().required(),\n    overnat_slut_tid: yup.string().required(),\n    overnat_kommune: yup.string().required(),\n    overnat_kontaktpers: yup.string().required(),\n    overnat_kontakttlf: yup\n      .string()\n      .matches(/^[0-9]{8}$/, \"telefonnr skal have 8 tal\"),\n    ansvarl_kontaktpers: yup.string().required(),\n    ansvarl_kontaktlf: yup\n      .string()\n      .matches(/^[0-9]{8}$/, \"telefonnr skal have 8 tal\"),\n    ansvarl_kontaktmail: yup.string().email().required(),\n  });\n\n  const [komkode, setKomkode] = useState(\"751|741|727|710|706|707|730|746\");\n  const [imageSrc, setImageSrc] = useState(\"\");\n  const [formErrors, setFormErrors] = useState([]);\n  const [successMessage, setSuccessMessage] = useState(false);\n\n  // const handleInputChange = (e) => {};\n\n  // const { register, handleSubmit, watch, errors } = useForm();\n  // const onSubmit = (data) => console.log(data);\n  // const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n  // const deleteImage = () => {\n  //   setData({\n  //     ...data,\n  //     overnat_tegning_filnavn: \"\",\n  //   });\n\n  //   setImageSrc(\"\");\n  // };\n\n  // const handleDateChange = (date) => {\n  //   setSelectedDate(date);\n  // };\n\n  // const handleStartDate = (date) => {\n  //   let startDate = new Date(date);\n  //   let slutDato = new Date(data.overnat_slut_dato);\n  //   let endDate = slutDato < startDate ? startDate : slutDato;\n  //   console.log(\"startDate :\", startDate, \" , endDate : \", endDate);\n  //   setData({\n  //     ...data,\n  //     overnat_start_dato: startDate.toISOString(),\n  //     overnat_slut_dato: endDate.toISOString(),\n  //   });\n  // };\n\n  // const handleStartTime = (date) => {\n  //   setData({\n  //     ...data,\n  //     overnat_start_tid: new Date(date).toISOString(),\n  //   });\n  // };\n\n  // const handleEndDate = (date) => {\n  //   let endDate = new Date(date);\n  //   let startDate = new Date(data.overnat_start_dato);\n  //   setData({\n  //     ...data,\n  //     overnat_slut_dato: new Date(date).toISOString(),\n  //   });\n  // };\n\n  // const handleEndTime = (date) => {\n  //   setData({\n  //     ...data,\n  //     overnat_slut_tid: new Date(date).toISOString(),\n  //   });\n  // };\n\n  // const handleSelect = (e) => {\n  //   const [nr, val] = e.target.value.split(\"_\");\n  //   console.log(\"kommune selected: \", e.target.value);\n  //   setData({\n  //     ...data,\n  //     overnat_kommune: e.target.value,\n  //     overnat_adresse: \"\",\n  //     the_geom: \"\",\n  //   });\n  //   setKomkode(nr);\n  //   setAdresseTekst(\"\");\n  // };\n\n  const setAdressData = (adress) => {\n    //console.log(`[${adress.adgangsadresse.x},${adress.adgangsadresse.x}]`);\n    // if (adress === \"\") {\n    //   setData({\n    //     ...data,\n    //     overnat_adresse: \"\",\n    //     the_geom: \"\",\n    //   });\n    // } else {\n    //   setData({\n    //     ...data,\n    //     overnat_adresse: adress.tekst,\n    //     the_geom: `[${adress.adgangsadresse.x},${adress.adgangsadresse.y}]`, // TODO: post geometry\n    //   });\n    // }\n    //ST_setsrid(ST_MakePoint(lat,long),4326) as geom\n    //the_geom: `[${adress.adgangsadresse.x},${adress.adgangsadresse.y}]`,\n\n    if (adress === \"\") {\n      setValues({\n        overnat_adresse: \"\",\n        the_geom: \"\",\n      });\n    } else {\n      setValues({\n        overnat_adresse: adress.tekst,\n        the_geom: `ST_setsrid(ST_MakePoint(${adress.adgangsadresse.x},${adress.adgangsadresse.y}),25832)`,\n      });\n    }\n  };\n\n  // const handleFormData = (e) => {\n  //   console.log(e.target.id, \":\", e.target.value);\n  //   setData({\n  //     ...data,\n  //     [e.target.id]: e.target.value,\n  //   });\n  // };\n\n  const handleCheckBox = (e) => {\n    console.log(\"handleCheckbox => \", e.target.value);\n    setValue(\"overnat_over_50\", e.target.checked);\n  };\n\n  const [adresseTekst, setAdresseTekst] = useState(\"\");\n\n  const submitHandler = (e) => {\n    /*\n     * 1. collect all the data to send, including base64 string\n       2. create geom ST_setsrid(ST_MakePoint(lat,long),4326) as geom\n       3. build sql, axios.post\n       4. Success or Error => show feedback \n     */\n    // console.log(data);\n    const formData = {\n      ...state,\n      ansoegn_indsendt: new Date(),\n    };\n    console.log(\"asnøgning\", formData);\n    schema\n      .validate(formData, { abortEarly: false })\n      .then(function (valid) {\n        //alert(\"schame validity =>\" + valid);\n        const q = buildQuery(formData);\n        postData(q)\n          .then((res) => {\n            setSuccessMessage(true);\n            setFormErrors([]);\n            setAdresseTekst(\"\");\n            setKomkode(\"751|741|727|710|706|707|730|746\");\n            resetForm();\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\n          })\n          .catch((err) => {\n            setFormErrors([\"Der var fejl ved indsending...\"]);\n            setSuccessMessage(false);\n            window.scrollTo({ top: 0, behavior: \"smooth\" });\n          });\n      })\n      .catch(function (err) {\n        console.log(err.errors);\n        setFormErrors(err.errors);\n        window.scrollTo({ top: 0, behavior: \"smooth\" });\n      });\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={daLocale}>\n      <Container maxWidth='sm'>\n        <Typography variant='h6' gutterBottom>\n          Ansøg om midlertidig overnatning\n        </Typography>\n        {formErrors.length > 0 && (\n          <ErrorComp errors={formErrors} closeAlert={setFormErrors} />\n        )}\n\n        {successMessage && <SuccessAlert closeAlert={setSuccessMessage} />}\n\n        <Grid container spacing={3}>\n          <SelectInput\n            size={12}\n            id='overnat_kommune'\n            title='Hvilken kommune'\n            setKomkode={setKomkode}\n            setAdresseTekst={setAdresseTekst}\n          />\n          <DawaSearcher\n            size={12}\n            setAdressData={setAdressData}\n            komkode={komkode}\n            adresseTekst={adresseTekst}\n            setAdresseTekst={setAdresseTekst}\n          />\n          <TextInput\n            size={12}\n            id='overnat_navn'\n            title='Overnatningstedets Navn'\n          />\n          <TextInput size={12} id='overnat_lokaler' title='Lokaler' />\n          <Grid item xs={6}>\n            <Typography\n              style={{ color: \"rgba(0, 0, 0, 0.54)\" }}\n              variant='subtitle1'\n              component='h3'\n            >\n              Overnatter mere end 50 personer{\" \"}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Checkbox\n              color='primary'\n              checked={state.overnat_over_50}\n              onChange={handleCheckBox}\n            />\n          </Grid>\n          {state.overnat_over_50 && <ImageUpload setImageSrc={setImageSrc} />}\n          <TextInput\n            size={12}\n            id='overnat_antal'\n            type='number'\n            title='Maksimal antal overnatninger'\n          />\n          <DateTimeInputs />\n          <TextInput\n            size={12}\n            id='overnat_kontaktpers'\n            title='Navn Kontaktperson'\n          />\n          <TextInput\n            type='number'\n            size={6}\n            id='overnat_kontakttlf'\n            title='Kontakt tlf.'\n          />\n          <Grid item xs={12}></Grid>\n          <TextInput\n            size={12}\n            id='ansvarl_kontaktpers'\n            title='Navn ansvarlig'\n          />\n          <TextInput\n            type='number'\n            size={6}\n            id='ansvarl_kontaktlf'\n            title='Tlf. ansvarlig'\n          />\n          <TextInput\n            size={6}\n            id='ansvarl_kontaktmail'\n            title='E-mail ansvarlig'\n          />\n\n          <SubmitButton onClick={submitHandler} />\n        </Grid>\n      </Container>\n    </MuiPickersUtilsProvider>\n  );\n}\nexport default Formular;\n","import axios from \"axios\";\n\nconst url = \"https://geocloud.beredskabskort.dk/api/v2/sql/geo\";\nconst key = \"fbb2d411cfbc7b706c02359402afe195\";\n\nexport const postData = (query) => {\n  const payload = { q: query, key: key, srs: \"25832\" };\n  return axios.post(url, payload);\n};\n","import React from \"react\";\nimport Formular from \"./Formular\";\nimport { FormularProvider } from \"./context/FormContext\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className='App'>\n      <FormularProvider>\n        <Formular />\n      </FormularProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}